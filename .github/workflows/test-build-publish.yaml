name: Test, Build and Publish

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        env:
          HUSKY_SKIP_INSTALL: true
        run: npm ci

      - name: Lint
        run: npm run lint -- @ngxpert/hot-toast

      - name: Build library
        run: npm run build:lib

      - name: Build app
        run: npm run build

      - name: Save build folder
        uses: actions/upload-artifact@v4
        with:
          name: build
          if-no-files-found: error
          path: dist

  cypress-run:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      # don't fail the entire matrix on failure
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download the build folder
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name:
          Cypress run
          # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v6
        with:
          # Starts web server for E2E tests - replace with your own server invocation
          # https://docs.cypress.io/guides/continuous-integration/introduction#Boot-your-server
          start: npm run ci:start-server
          wait-on: 'http://localhost:4200' # Waits for above
          # Records to Cypress Cloud
          # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
          record: true
          parallel: true # Runs test in parallel using settings above
        env:
          # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
          # in GitHub repo → Settings → Secrets → Actions
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: cypress-run
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        env:
          HUSKY_SKIP_INSTALL: true
        run: npm ci

      - name: Download the build folder
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release --debug
